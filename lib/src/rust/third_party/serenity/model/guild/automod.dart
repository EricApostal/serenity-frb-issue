// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../../frb_generated.dart';
import '../id.dart';
import 'audit_log.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `InterimTrigger`, `KeywordPresetType`, `RawActionMetadata`, `RawAction`, `TriggerMetadata`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `cmp`, `cmp`, `cmp`, `cmp`, `deserialize`, `deserialize`, `eq`, `eq`, `eq`, `eq`, `eq`, `eq`, `eq`, `eq`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `hash`, `hash`, `hash`, `hash`, `partial_cmp`, `partial_cmp`, `partial_cmp`, `partial_cmp`, `serialize`, `serialize`
// These functions are ignored (category: IgnoreBecauseOwnerTyShouldIgnore): `default`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ActionExecution>>
abstract class ActionExecution implements RustOpaqueInterface {
  Action get action;

  MessageId? get alertSystemMessageId;

  ChannelId? get channelId;

  String get content;

  GuildId get guildId;

  String? get matchedContent;

  String? get matchedKeyword;

  MessageId? get messageId;

  RuleId get ruleId;

  TriggerType get triggerType;

  UserId get userId;

  set action(Action action);

  set alertSystemMessageId(MessageId? alertSystemMessageId);

  set channelId(ChannelId? channelId);

  set content(String content);

  set guildId(GuildId guildId);

  set matchedContent(String? matchedContent);

  set matchedKeyword(String? matchedKeyword);

  set messageId(MessageId? messageId);

  set ruleId(RuleId ruleId);

  set triggerType(TriggerType triggerType);

  set userId(UserId userId);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ActionType>>
abstract class ActionType implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EventType>>
abstract class EventType implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Rule>>
abstract class Rule implements RustOpaqueInterface {
  List<Action> get actions;

  UserId get creatorId;

  bool get enabled;

  EventType get eventType;

  List<ChannelId> get exemptChannels;

  List<RoleId> get exemptRoles;

  GuildId get guildId;

  RuleId get id;

  String get name;

  Trigger get trigger;

  set actions(List<Action> actions);

  set creatorId(UserId creatorId);

  set enabled(bool enabled);

  set eventType(EventType eventType);

  set exemptChannels(List<ChannelId> exemptChannels);

  set exemptRoles(List<RoleId> exemptRoles);

  set guildId(GuildId guildId);

  set id(RuleId id);

  set name(String name);

  set trigger(Trigger trigger);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Trigger>>
abstract class Trigger implements RustOpaqueInterface {
  Future<TriggerType> kind();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<TriggerType>>
abstract class TriggerType implements RustOpaqueInterface {}
