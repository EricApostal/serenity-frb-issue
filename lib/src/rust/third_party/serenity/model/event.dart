// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../../../lib.dart';
import 'application.dart';
import 'channel.dart';
import 'gateway.dart';
import 'guild.dart';
import 'guild/audit_log.dart';
import 'guild/automod.dart';
import 'id.dart';
import 'invite.dart';
import 'misc.dart';
import 'monetization.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'sticker.dart';
import 'timestamp.dart';
import 'user.dart';
import 'voice.dart';


            // These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `GatewayEvent`, `PresencesReplaceEvent`, `ResumedEvent`, `RoleEventHelper`, `VoiceServerUpdateEvent`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `clone`, `deserialize`, `deserialize`, `deserialize`, `deserialize`, `deserialize`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `serialize`


            

            
                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoModActionExecutionEvent>>
                abstract class AutoModActionExecutionEvent implements RustOpaqueInterface {
                     ActionExecution get execution;


  set execution(ActionExecution execution);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoModRuleCreateEvent>>
                abstract class AutoModRuleCreateEvent implements RustOpaqueInterface {
                     Rule get rule;


  set rule(Rule rule);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoModRuleDeleteEvent>>
                abstract class AutoModRuleDeleteEvent implements RustOpaqueInterface {
                     Rule get rule;


  set rule(Rule rule);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoModRuleUpdateEvent>>
                abstract class AutoModRuleUpdateEvent implements RustOpaqueInterface {
                     Rule get rule;


  set rule(Rule rule);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChannelCreateEvent>>
                abstract class ChannelCreateEvent implements RustOpaqueInterface {
                     GuildChannel get channel;


  set channel(GuildChannel channel);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChannelDeleteEvent>>
                abstract class ChannelDeleteEvent implements RustOpaqueInterface {
                     GuildChannel get channel;


  set channel(GuildChannel channel);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChannelPinsUpdateEvent>>
                abstract class ChannelPinsUpdateEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId? get guildId;


 Timestamp? get lastPinTimestamp;


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set lastPinTimestamp(Timestamp? lastPinTimestamp);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChannelUpdateEvent>>
                abstract class ChannelUpdateEvent implements RustOpaqueInterface {
                     GuildChannel get channel;


  set channel(GuildChannel channel);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CommandPermissionsUpdateEvent>>
                abstract class CommandPermissionsUpdateEvent implements RustOpaqueInterface {
                     CommandPermissions get permission;


  set permission(CommandPermissions permission);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EntitlementCreateEvent>>
                abstract class EntitlementCreateEvent implements RustOpaqueInterface {
                     Entitlement get entitlement;


  set entitlement(Entitlement entitlement);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EntitlementDeleteEvent>>
                abstract class EntitlementDeleteEvent implements RustOpaqueInterface {
                     Entitlement get entitlement;


  set entitlement(Entitlement entitlement);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EntitlementUpdateEvent>>
                abstract class EntitlementUpdateEvent implements RustOpaqueInterface {
                     Entitlement get entitlement;


  set entitlement(Entitlement entitlement);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Event>>
                abstract class Event implements RustOpaqueInterface {
                    /// Return the event name of this event. Returns [`None`] if the event is
/// [`Unknown`](Event::Unknown).
 Future<String?>  name();



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildAuditLogEntryCreateEvent>>
                abstract class GuildAuditLogEntryCreateEvent implements RustOpaqueInterface {
                     AuditLogEntry get entry;


 GuildId get guildId;


  set entry(AuditLogEntry entry);


  set guildId(GuildId guildId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildBanAddEvent>>
                abstract class GuildBanAddEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 User get user;


  set guildId(GuildId guildId);


  set user(User user);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildBanRemoveEvent>>
                abstract class GuildBanRemoveEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 User get user;


  set guildId(GuildId guildId);


  set user(User user);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildCreateEvent>>
                abstract class GuildCreateEvent implements RustOpaqueInterface {
                     Guild get guild;


  set guild(Guild guild);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildDeleteEvent>>
                abstract class GuildDeleteEvent implements RustOpaqueInterface {
                     UnavailableGuild get guild;


  set guild(UnavailableGuild guild);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildEmojisUpdateEvent>>
                abstract class GuildEmojisUpdateEvent implements RustOpaqueInterface {
                     Map<EmojiId, Emoji> get emojis;


 GuildId get guildId;


  set emojis(Map<EmojiId, Emoji> emojis);


  set guildId(GuildId guildId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildIntegrationsUpdateEvent>>
                abstract class GuildIntegrationsUpdateEvent implements RustOpaqueInterface {
                     GuildId get guildId;


  set guildId(GuildId guildId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildMemberAddEvent>>
                abstract class GuildMemberAddEvent implements RustOpaqueInterface {
                     Member get member;


  set member(Member member);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildMemberRemoveEvent>>
                abstract class GuildMemberRemoveEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 User get user;


  set guildId(GuildId guildId);


  set user(User user);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildMemberUpdateEvent>>
                abstract class GuildMemberUpdateEvent implements RustOpaqueInterface {
                     ImageHash? get avatar;


 Timestamp? get communicationDisabledUntil;


 bool get deaf;


 GuildId get guildId;


 Timestamp get joinedAt;


 bool get mute;


 String? get nick;


 bool get pending;


 Timestamp? get premiumSince;


 List<RoleId> get roles;


 Timestamp? get unusualDmActivityUntil;


 User get user;


  set avatar(ImageHash? avatar);


  set communicationDisabledUntil(Timestamp? communicationDisabledUntil);


  set deaf(bool deaf);


  set guildId(GuildId guildId);


  set joinedAt(Timestamp joinedAt);


  set mute(bool mute);


  set nick(String? nick);


  set pending(bool pending);


  set premiumSince(Timestamp? premiumSince);


  set roles(List<RoleId> roles);


  set unusualDmActivityUntil(Timestamp? unusualDmActivityUntil);


  set user(User user);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildMembersChunkEvent>>
                abstract class GuildMembersChunkEvent implements RustOpaqueInterface {
                     int get chunkCount;


 int get chunkIndex;


 GuildId get guildId;


 Map<UserId, Member> get members;


 String? get nonce;


 List<GenericId> get notFound;


 List<Presence>? get presences;


  set chunkCount(int chunkCount);


  set chunkIndex(int chunkIndex);


  set guildId(GuildId guildId);


  set members(Map<UserId, Member> members);


  set nonce(String? nonce);


  set notFound(List<GenericId> notFound);


  set presences(List<Presence>? presences);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildRoleCreateEvent>>
                abstract class GuildRoleCreateEvent implements RustOpaqueInterface {
                     Role get role;


  set role(Role role);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildRoleDeleteEvent>>
                abstract class GuildRoleDeleteEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 RoleId get roleId;


  set guildId(GuildId guildId);


  set roleId(RoleId roleId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildRoleUpdateEvent>>
                abstract class GuildRoleUpdateEvent implements RustOpaqueInterface {
                     Role get role;


  set role(Role role);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildScheduledEventCreateEvent>>
                abstract class GuildScheduledEventCreateEvent implements RustOpaqueInterface {
                     ScheduledEvent get event;


  set event(ScheduledEvent event);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildScheduledEventDeleteEvent>>
                abstract class GuildScheduledEventDeleteEvent implements RustOpaqueInterface {
                     ScheduledEvent get event;


  set event(ScheduledEvent event);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildScheduledEventUpdateEvent>>
                abstract class GuildScheduledEventUpdateEvent implements RustOpaqueInterface {
                     ScheduledEvent get event;


  set event(ScheduledEvent event);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildScheduledEventUserAddEvent>>
                abstract class GuildScheduledEventUserAddEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 ScheduledEventId get scheduledEventId;


 UserId get userId;


  set guildId(GuildId guildId);


  set scheduledEventId(ScheduledEventId scheduledEventId);


  set userId(UserId userId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildScheduledEventUserRemoveEvent>>
                abstract class GuildScheduledEventUserRemoveEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 ScheduledEventId get scheduledEventId;


 UserId get userId;


  set guildId(GuildId guildId);


  set scheduledEventId(ScheduledEventId scheduledEventId);


  set userId(UserId userId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildStickersUpdateEvent>>
                abstract class GuildStickersUpdateEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 Map<StickerId, Sticker> get stickers;


  set guildId(GuildId guildId);


  set stickers(Map<StickerId, Sticker> stickers);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GuildUpdateEvent>>
                abstract class GuildUpdateEvent implements RustOpaqueInterface {
                     PartialGuild get guild;


  set guild(PartialGuild guild);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<IntegrationCreateEvent>>
                abstract class IntegrationCreateEvent implements RustOpaqueInterface {
                     Integration get integration;


  set integration(Integration integration);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<IntegrationDeleteEvent>>
                abstract class IntegrationDeleteEvent implements RustOpaqueInterface {
                     ApplicationId? get applicationId;


 GuildId get guildId;


 IntegrationId get id;


  set applicationId(ApplicationId? applicationId);


  set guildId(GuildId guildId);


  set id(IntegrationId id);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<IntegrationUpdateEvent>>
                abstract class IntegrationUpdateEvent implements RustOpaqueInterface {
                     Integration get integration;


  set integration(Integration integration);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<InteractionCreateEvent>>
                abstract class InteractionCreateEvent implements RustOpaqueInterface {
                     Interaction get interaction;


  set interaction(Interaction interaction);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<InviteCreateEvent>>
                abstract class InviteCreateEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 String get code;


 Timestamp get createdAt;


 GuildId? get guildId;


 User? get inviter;


 int get maxAge;


 int get maxUses;


 Value? get targetApplication;


 InviteTargetType? get targetType;


 User? get targetUser;


 bool get temporary;


 BigInt get uses;


  set channelId(ChannelId channelId);


  set code(String code);


  set createdAt(Timestamp createdAt);


  set guildId(GuildId? guildId);


  set inviter(User? inviter);


  set maxAge(int maxAge);


  set maxUses(int maxUses);


  set targetApplication(Value? targetApplication);


  set targetType(InviteTargetType? targetType);


  set targetUser(User? targetUser);


  set temporary(bool temporary);


  set uses(BigInt uses);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<InviteDeleteEvent>>
                abstract class InviteDeleteEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 String get code;


 GuildId? get guildId;


  set channelId(ChannelId channelId);


  set code(String code);


  set guildId(GuildId? guildId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageCreateEvent>>
                abstract class MessageCreateEvent implements RustOpaqueInterface {
                     Message get message;


  set message(Message message);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageDeleteBulkEvent>>
                abstract class MessageDeleteBulkEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId? get guildId;


 List<MessageId> get ids;


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set ids(List<MessageId> ids);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageDeleteEvent>>
                abstract class MessageDeleteEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId? get guildId;


 MessageId get messageId;


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set messageId(MessageId messageId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessagePollVoteAddEvent>>
                abstract class MessagePollVoteAddEvent implements RustOpaqueInterface {
                     AnswerId get answerId;


 ChannelId get channelId;


 GuildId? get guildId;


 MessageId get messageId;


 UserId get userId;


  set answerId(AnswerId answerId);


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set messageId(MessageId messageId);


  set userId(UserId userId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessagePollVoteRemoveEvent>>
                abstract class MessagePollVoteRemoveEvent implements RustOpaqueInterface {
                     AnswerId get answerId;


 ChannelId get channelId;


 GuildId? get guildId;


 MessageId get messageId;


 UserId get userId;


  set answerId(AnswerId answerId);


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set messageId(MessageId messageId);


  set userId(UserId userId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MessageUpdateEvent>>
                abstract class MessageUpdateEvent implements RustOpaqueInterface {
                    /// Writes the updated data in this message update event into the given [`Message`].
 Future<void>  applyToMessage({required Message message });


 MessageActivity?? get activity;


 MessageApplication?? get application;


 ApplicationId?? get applicationId;


 List<Attachment>? get attachments;


 User? get author;


 ChannelId get channelId;


 List<ActionRow>? get components;


 String? get content;


 Timestamp? get editedTimestamp;


 List<Embed>? get embeds;


 MessageFlags?? get flags;


 GuildId? get guildId;


 MessageId get id;


 BoxMessageInteraction?? get interaction;


 BoxMessageInteractionMetadata?? get interactionMetadata;


 MessageType? get kind;


 BoxPartialMember?? get member;


 List<ChannelMention>? get mentionChannels;


 bool? get mentionEveryone;


 List<RoleId>? get mentionRoles;


 List<User>? get mentions;


 MessageReference?? get messageReference;


 bool? get pinned;


 BigInt?? get position;


 List<MessageReaction>? get reactions;


 BoxMessage?? get referencedMessage;


 RoleSubscriptionData?? get roleSubscriptionData;


 List<StickerItem>? get stickerItems;


 GuildChannel?? get thread;


 Timestamp? get timestamp;


 bool? get tts;


 WebhookId?? get webhookId;


  set activity(MessageActivity?? activity);


  set application(MessageApplication?? application);


  set applicationId(ApplicationId?? applicationId);


  set attachments(List<Attachment>? attachments);


  set author(User? author);


  set channelId(ChannelId channelId);


  set components(List<ActionRow>? components);


  set content(String? content);


  set editedTimestamp(Timestamp? editedTimestamp);


  set embeds(List<Embed>? embeds);


  set flags(MessageFlags?? flags);


  set guildId(GuildId? guildId);


  set id(MessageId id);


  set interaction(BoxMessageInteraction?? interaction);


  set interactionMetadata(BoxMessageInteractionMetadata?? interactionMetadata);


  set kind(MessageType? kind);


  set member(BoxPartialMember?? member);


  set mentionChannels(List<ChannelMention>? mentionChannels);


  set mentionEveryone(bool? mentionEveryone);


  set mentionRoles(List<RoleId>? mentionRoles);


  set mentions(List<User>? mentions);


  set messageReference(MessageReference?? messageReference);


  set pinned(bool? pinned);


  set position(BigInt?? position);


  set reactions(List<MessageReaction>? reactions);


  set referencedMessage(BoxMessage?? referencedMessage);


  set roleSubscriptionData(RoleSubscriptionData?? roleSubscriptionData);


  set stickerItems(List<StickerItem>? stickerItems);


  set thread(GuildChannel?? thread);


  set timestamp(Timestamp? timestamp);


  set tts(bool? tts);


  set webhookId(WebhookId?? webhookId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<PresenceUpdateEvent>>
                abstract class PresenceUpdateEvent implements RustOpaqueInterface {
                     Presence get presence;


  set presence(Presence presence);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReactionAddEvent>>
                abstract class ReactionAddEvent implements RustOpaqueInterface {
                     Reaction get reaction;


  set reaction(Reaction reaction);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReactionRemoveAllEvent>>
                abstract class ReactionRemoveAllEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId? get guildId;


 MessageId get messageId;


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set messageId(MessageId messageId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReactionRemoveEmojiEvent>>
                abstract class ReactionRemoveEmojiEvent implements RustOpaqueInterface {
                     Reaction get reaction;


  set reaction(Reaction reaction);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReactionRemoveEvent>>
                abstract class ReactionRemoveEvent implements RustOpaqueInterface {
                     Reaction get reaction;


  set reaction(Reaction reaction);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReadyEvent>>
                abstract class ReadyEvent implements RustOpaqueInterface {
                     Ready get ready;


  set ready(Ready ready);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StageInstanceCreateEvent>>
                abstract class StageInstanceCreateEvent implements RustOpaqueInterface {
                     StageInstance get stageInstance;


  set stageInstance(StageInstance stageInstance);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StageInstanceDeleteEvent>>
                abstract class StageInstanceDeleteEvent implements RustOpaqueInterface {
                     StageInstance get stageInstance;


  set stageInstance(StageInstance stageInstance);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StageInstanceUpdateEvent>>
                abstract class StageInstanceUpdateEvent implements RustOpaqueInterface {
                     StageInstance get stageInstance;


  set stageInstance(StageInstance stageInstance);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadCreateEvent>>
                abstract class ThreadCreateEvent implements RustOpaqueInterface {
                     GuildChannel get thread;


  set thread(GuildChannel thread);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadDeleteEvent>>
                abstract class ThreadDeleteEvent implements RustOpaqueInterface {
                     PartialGuildChannel get thread;


  set thread(PartialGuildChannel thread);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadListSyncEvent>>
                abstract class ThreadListSyncEvent implements RustOpaqueInterface {
                     List<ChannelId>? get channelIds;


 GuildId get guildId;


 List<ThreadMember> get members;


 List<GuildChannel> get threads;


  set channelIds(List<ChannelId>? channelIds);


  set guildId(GuildId guildId);


  set members(List<ThreadMember> members);


  set threads(List<GuildChannel> threads);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadMemberUpdateEvent>>
                abstract class ThreadMemberUpdateEvent implements RustOpaqueInterface {
                     ThreadMember get member;


  set member(ThreadMember member);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadMembersUpdateEvent>>
                abstract class ThreadMembersUpdateEvent implements RustOpaqueInterface {
                     List<ThreadMember> get addedMembers;


 GuildId get guildId;


 ChannelId get id;


 int get memberCount;


 List<UserId> get removedMemberIds;


  set addedMembers(List<ThreadMember> addedMembers);


  set guildId(GuildId guildId);


  set id(ChannelId id);


  set memberCount(int memberCount);


  set removedMemberIds(List<UserId> removedMemberIds);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ThreadUpdateEvent>>
                abstract class ThreadUpdateEvent implements RustOpaqueInterface {
                     GuildChannel get thread;


  set thread(GuildChannel thread);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<TypingStartEvent>>
                abstract class TypingStartEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId? get guildId;


 Member? get member;


 BigInt get timestamp;


 UserId get userId;


  set channelId(ChannelId channelId);


  set guildId(GuildId? guildId);


  set member(Member? member);


  set timestamp(BigInt timestamp);


  set userId(UserId userId);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UnknownEvent>>
                abstract class UnknownEvent implements RustOpaqueInterface {
                     String get kind;


 Value get value;


  set kind(String kind);


  set value(Value value);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserUpdateEvent>>
                abstract class UserUpdateEvent implements RustOpaqueInterface {
                     CurrentUser get currentUser;


  set currentUser(CurrentUser currentUser);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<VoiceChannelStatusUpdateEvent>>
                abstract class VoiceChannelStatusUpdateEvent implements RustOpaqueInterface {
                     GuildId get guildId;


 ChannelId get id;


 String? get status;


  set guildId(GuildId guildId);


  set id(ChannelId id);


  set status(String? status);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<VoiceStateUpdateEvent>>
                abstract class VoiceStateUpdateEvent implements RustOpaqueInterface {
                     VoiceState get voiceState;


  set voiceState(VoiceState voiceState);



                    
                }
                


                // Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WebhookUpdateEvent>>
                abstract class WebhookUpdateEvent implements RustOpaqueInterface {
                     ChannelId get channelId;


 GuildId get guildId;


  set channelId(ChannelId channelId);


  set guildId(GuildId guildId);



                    
                }
                
            