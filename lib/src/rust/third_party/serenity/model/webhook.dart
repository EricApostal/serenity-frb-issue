// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../../../lib.dart';
import '../cache.dart';
import 'id.dart';
import 'misc.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'user.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `clone`, `clone`, `clone`, `cmp`, `eq`, `fmt`, `fmt`, `fmt`, `fmt`, `from`, `from`, `hash`, `partial_cmp`
// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `delete_message`, `delete`, `edit_message`, `edit`, `execute`, `from_id_with_token`, `from_id`, `from_url`, `get_message`, `refresh`, `to_channel`, `to_guild_cached`, `to_partial_guild_with_counts`, `to_partial_guild`, `to_webhook`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Webhook>>
abstract class Webhook implements RustOpaqueInterface {
  ApplicationId? get applicationId;

  ImageHash? get avatar;

  ChannelId? get channelId;

  GuildId? get guildId;

  WebhookId get id;

  WebhookType get kind;

  String? get name;

  WebhookChannel? get sourceChannel;

  WebhookGuild? get sourceGuild;

  SecretString? get token;

  SecretString? get url;

  User? get user;

  set applicationId(ApplicationId? applicationId);

  set avatar(ImageHash? avatar);

  set channelId(ChannelId? channelId);

  set guildId(GuildId? guildId);

  set id(WebhookId id);

  set kind(WebhookType kind);

  set name(String? name);

  set sourceChannel(WebhookChannel? sourceChannel);

  set sourceGuild(WebhookGuild? sourceGuild);

  set token(SecretString? token);

  set url(SecretString? url);

  set user(User? user);

  /// Returns the url of the webhook.
  ///
  /// ```rust,ignore
  /// assert_eq!(hook.url(), "https://discord.com/api/webhooks/245037420704169985/ig5AO-wdVWpCBtUUMxmgsWryqgsW3DChbKYOINftJ4DCrUbnkedoYZD0VOH1QLr-S3sV")
  /// ```
  ///
  /// # Errors
  ///
  /// Returns an [`Error::Model`] if the [`Self::token`] is [`None`].
  Future<String> url();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WebhookChannel>>
abstract class WebhookChannel implements RustOpaqueInterface {
  ChannelId get id;

  String get name;

  set id(ChannelId id);

  set name(String name);

  /// Attempts to find a [`GuildChannel`] by its Id in the cache.
  Future<GuildChannelRef?> toChannelCached({required Cache cache});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WebhookGuild>>
abstract class WebhookGuild implements RustOpaqueInterface {
  ImageHash? get icon;

  GuildId get id;

  String get name;

  set icon(ImageHash? icon);

  set id(GuildId id);

  set name(String name);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WebhookType>>
abstract class WebhookType implements RustOpaqueInterface {
  Future<void> name();
}
