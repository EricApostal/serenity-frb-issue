// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'id.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'timestamp.dart';

// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `EntitlementOwner`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `bits`, `clone`, `clone`, `clone`, `clone`, `clone`, `deserialize`, `eq`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `from_bits_retain`, `from`, `from`, `from`, `from`, `hash`, `serialize`
// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `list`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Entitlement>>
abstract class Entitlement implements RustOpaqueInterface {
  ApplicationId get applicationId;

  bool get deleted;

  Timestamp? get endsAt;

  GuildId? get guildId;

  EntitlementId get id;

  EntitlementKind get kind;

  SkuId get skuId;

  Timestamp? get startsAt;

  UserId? get userId;

  set applicationId(ApplicationId applicationId);

  set deleted(bool deleted);

  set endsAt(Timestamp? endsAt);

  set guildId(GuildId? guildId);

  set id(EntitlementId id);

  set kind(EntitlementKind kind);

  set skuId(SkuId skuId);

  set startsAt(Timestamp? startsAt);

  set userId(UserId? userId);

  /// Returns a link to the SKU corresponding to this entitlement. See [`Sku::url`] for details.
  Future<String> skuUrl();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EntitlementKind>>
abstract class EntitlementKind implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Sku>>
abstract class Sku implements RustOpaqueInterface {
  ApplicationId get applicationId;

  SkuFlags get flags;

  SkuId get id;

  SkuKind get kind;

  String get name;

  String get slug;

  set applicationId(ApplicationId applicationId);

  set flags(SkuFlags flags);

  set id(SkuId id);

  set kind(SkuKind kind);

  set name(String name);

  set slug(String slug);

  /// Returns the store url for this SKU. If included in a message, will render as a rich embed.
  /// See the [Discord docs] for details.
  ///
  /// [Discord docs]: https://discord.com/developers/docs/monetization/skus#linking-to-your-skus
  Future<String> url();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SkuFlags>>
abstract class SkuFlags implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SkuKind>>
abstract class SkuKind implements RustOpaqueInterface {}
