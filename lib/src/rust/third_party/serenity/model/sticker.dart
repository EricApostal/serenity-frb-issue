// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'id.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'user.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `clone`, `clone`, `clone`, `clone`, `clone`, `cmp`, `cmp`, `eq`, `eq`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `from`, `from`, `from`, `from`, `hash`, `hash`, `partial_cmp`, `partial_cmp`
// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `delete`, `delete`, `edit`, `edit`, `to_sticker_pack`, `to_sticker`, `to_sticker`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Sticker>>
abstract class Sticker implements RustOpaqueInterface {
  bool get available;

  String? get description;

  StickerFormatType get formatType;

  GuildId? get guildId;

  StickerId get id;

  StickerType get kind;

  String get name;

  StickerPackId? get packId;

  int? get sortValue;

  List<String> get tags;

  User? get user;

  set available(bool available);

  set description(String? description);

  set formatType(StickerFormatType formatType);

  set guildId(GuildId? guildId);

  set id(StickerId id);

  set kind(StickerType kind);

  set name(String name);

  set packId(StickerPackId? packId);

  set sortValue(int? sortValue);

  set tags(List<String> tags);

  set user(User? user);

  /// Retrieves the URL to the sticker image.
  ///
  /// **Note**: This will only be `None` if the format_type is unknown.
  Future<String?> imageUrl();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StickerFormatType>>
abstract class StickerFormatType implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StickerItem>>
abstract class StickerItem implements RustOpaqueInterface {
  StickerFormatType get formatType;

  StickerId get id;

  String get name;

  set formatType(StickerFormatType formatType);

  set id(StickerId id);

  set name(String name);

  /// Retrieves the URL to the sticker image.
  ///
  /// **Note**: This will only be `None` if the format_type is unknown.
  Future<String?> imageUrl();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StickerPack>>
abstract class StickerPack implements RustOpaqueInterface {
  StickerPackBannerId get bannerAssetId;

  StickerId? get coverStickerId;

  String get description;

  StickerPackId get id;

  String get name;

  SkuId get skuId;

  List<Sticker> get stickers;

  set bannerAssetId(StickerPackBannerId bannerAssetId);

  set coverStickerId(StickerId? coverStickerId);

  set description(String description);

  set id(StickerPackId id);

  set name(String name);

  set skuId(SkuId skuId);

  set stickers(List<Sticker> stickers);

  Future<String> bannerUrl();

  /// Returns the sticker that is shown as the pack's icon
  Future<Sticker?> coverSticker();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StickerType>>
abstract class StickerType implements RustOpaqueInterface {}
